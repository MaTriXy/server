<?php

namespace Lollypop\GearBundle\Entity;

use Doctrine\ORM\Mapping AS ORM;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of User
 *
 * @author seshachalam
 */

/**
 * @ORM\Entity
 * @ORM\Table(name="gear_user")
 */
class User
{

    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=50, nullable=true)
     */
    private $first_name;

    /**
     * @ORM\Column(type="string", length=50, nullable=true)
     */
    private $last_name;

    /**
     * @ORM\Column(type="string", length=250, nullable=false, unique=true)
     */
    private $email;

    /**
     * @ORM\OneToMany(targetEntity="GCMRegID", mappedBy="user")
     */
    private $gcm_reg_ids;

    /**
     * @ORM\OneToMany(targetEntity="Message", mappedBy="user")
     */
    private $messages;

    /**
     * @ORM\ManyToMany(targetEntity="Location", inversedBy="users")
     * @ORM\JoinTable(name="users_locations")
     */
    private $locations;

    /**
     * @ORM\OneToOne(targetEntity="Location")
     * @ORM\JoinColumn(name="location", referencedColumnName="id", onDelete="CASCADE")
     * */
    private $current_location;

    /**                        
     * @ORM\Column(type="boolean")
     */
    private $active;                        

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    private $active_at;

    /**
     * @ORM\Column(type="datetime")
     */
    private $created_at;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    private $updated_at;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->gcm_reg_ids = new \Doctrine\Common\Collections\ArrayCollection();
        $this->messages = new \Doctrine\Common\Collections\ArrayCollection();
        $this->locations = new \Doctrine\Common\Collections\ArrayCollection();
        $this->created_at = new \DateTime();
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set first_name
     *
     * @param string $firstName
     *
     * @return User
     */
    public function setFirstName($firstName)
    {
        $this->first_name = $firstName;

        return $this;
    }

    /**
     * Get first_name
     *
     * @return string 
     */
    public function getFirstName()
    {
        return $this->first_name;
    }

    /**
     * Set last_name
     *
     * @param string $lastName
     *
     * @return User
     */
    public function setLastName($lastName)
    {
        $this->last_name = $lastName;

        return $this;
    }

    /**
     * Get last_name
     *
     * @return string 
     */
    public function getLastName()
    {
        return $this->last_name;
    }

    /**
     * Set email
     *
     * @param string $email
     *
     * @return User
     */
    public function setEmail($email)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Get email
     *
     * @return string 
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Add gcm_reg_ids
     *
     * @param \Lollypop\GearBundle\Entity\GCMRegID $gcmRegIds
     *
     * @return User
     */
    public function addGcmRegId(\Lollypop\GearBundle\Entity\GCMRegID $gcmRegIds)
    {
        $this->gcm_reg_ids[] = $gcmRegIds;

        return $this;
    }

    /**
     * Remove gcm_reg_ids
     *
     * @param \Lollypop\GearBundle\Entity\GCMRegID $gcmRegIds
     */
    public function removeGcmRegId(\Lollypop\GearBundle\Entity\GCMRegID $gcmRegIds)
    {
        $this->gcm_reg_ids->removeElement($gcmRegIds);
    }

    /**
     * Get gcm_reg_ids
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getGcmRegIds()
    {
        return $this->gcm_reg_ids;
    }

    /**
     * Add messages
     *
     * @param \Lollypop\GearBundle\Entity\Message $messages
     *
     * @return User
     */
    public function addMessage(\Lollypop\GearBundle\Entity\Message $messages)
    {
        $this->messages[] = $messages;

        return $this;
    }

    /**
     * Remove messages
     *
     * @param \Lollypop\GearBundle\Entity\Message $messages
     */
    public function removeMessage(\Lollypop\GearBundle\Entity\Message $messages)
    {
        $this->messages->removeElement($messages);
    }

    /**
     * Get messages
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getMessages()
    {
        return $this->messages;
    }

    /**
     * Add locations
     *
     * @param \Lollypop\GearBundle\Entity\Location $locations
     *
     * @return User
     */
    public function addLocation(\Lollypop\GearBundle\Entity\Location $locations)
    {
        $this->locations[] = $locations;

        return $this;
    }

    /**
     * Remove locations
     *
     * @param \Lollypop\GearBundle\Entity\Location $locations
     */
    public function removeLocation(\Lollypop\GearBundle\Entity\Location $locations)
    {
        $this->locations->removeElement($locations);
    }

    /**
     * Get locations
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getLocations()
    {
        return $this->locations;
    }

    /**
     * Set current_location
     *
     * @param \Lollypop\GearBundle\Entity\Location $currentLocation
     *
     * @return User
     */
    public function setCurrentLocation(\Lollypop\GearBundle\Entity\Location $currentLocation = null)
    {
        $this->current_location = $currentLocation;

        return $this;
    }

    /**
     * Get current_location
     *
     * @return \Lollypop\GearBundle\Entity\Location 
     */
    public function getCurrentLocation()
    {
        return $this->current_location;
    }

    /**
     * Set active
     *
     * @param boolean $active
     *
     * @return User
     */
    public function setActive($active)
    {
        $this->active = $active;

        return $this;
    }

    /**
     * Get active
     *
     * @return boolean 
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * Set active_at
     *
     * @param \DateTime $activeAt
     *
     * @return User
     */
    public function setActiveAt($activeAt)
    {
        $this->active_at = $activeAt;

        return $this;
    }

    /**
     * Get active_at
     *
     * @return \DateTime 
     */
    public function getActiveAt()
    {
        return $this->active_at;
    }

    /**
     * Set created_at
     *
     * @param \DateTime $createdAt
     * @return User
     */
    public function setCreatedAt($createdAt)
    {
        $this->created_at = $createdAt;

        return $this;
    }

    /**
     * Get created_at
     *
     * @return \DateTime 
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    /**
     * Set updated_at
     *
     * @param \DateTime $updatedAt
     * @return User
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updated_at = $updatedAt;

        return $this;
    }

    /**
     * Get updated_at
     *
     * @return \DateTime 
     */
    public function getUpdatedAt()
    {
        return $this->updated_at;
    }

}
